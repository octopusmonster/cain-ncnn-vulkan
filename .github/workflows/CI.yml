name: CI
on: [push, pull_request]
jobs:
  windows-2019:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: cache-vulkansdk
      id: cache-vulkansdk
      uses: actions/cache@v1
      with:
        path: "VulkanSDK"
        key: VulkanSDK-1.2.135.0-Installer-4
    - name: vulkansdk
      if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/1.2.135.0/windows/VulkanSDK-1.2.135.0-Installer.exe?Human=true -OutFile VulkanSDK-1.2.135.0-Installer.exe
        7z x -aoa ./VulkanSDK-1.2.135.0-Installer.exe -oVulkanSDK
        Remove-Item .\VulkanSDK\Demos, .\VulkanSDK\Samples, .\VulkanSDK\Third-Party, .\VulkanSDK\Tools, .\VulkanSDK\Tools32, .\VulkanSDK\Bin32, .\VulkanSDK\Lib32 -Recurse
    - name: configure
      run: |
        $env:VULKAN_SDK="$(pwd)/VulkanSDK"
        mkdir build; cd build
        cmake -A x64 ../src
    - name: build
      run: cmake --build build --config Release -j 2
    - name: deploy
      run: |
        mkdir cain-ncnn-vulkan-artifact
        Copy-Item -Verbose -Path "build\Release\cain-ncnn-vulkan.exe" -Destination "cain-ncnn-vulkan-artifact"
        Copy-Item -Verbose -Recurse -Path "models\*" -Destination "cain-ncnn-vulkan-artifact"
    - uses: actions/upload-artifact@v2
    - uses: actions/create-release@v1
      with:
        name: cain-ncnn-vulkan-artifact-windows-2019
        path: cain-ncnn-vulkan-artifact
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
